#!/usr/bin/env node

let path = require('path')
let ejs = require('ejs')

let lib = require('./lib/cli')
let common = require('./lib/common.js')

let argv = process.argv.slice(2)
if (argv.length !== 2) lib.errx(1, 'Usage:', lib.prog, 'index.json config.json')

let view = {
    index: lib.json(argv[0]),
    config: lib.json(argv[1]),
    get baseUrl() { return this.config.rss.baseUrl + '/rss.xml' },
    get posts() { return this.index.posts.slice(0,8) },
    get updated() {
        let d = new Date(0)
        if (this.posts.length) d = Math.max(...this.posts.map(o => o.mtime))
        return new Date(d).toUTCString()
    },
    body: function(file) {
	let baseUrl = this.config.rss.baseUrl + '/' + file
	return new lib.MarkdownParser(file).body({baseUrl})
    },
    postlink: common.postlink,
    path
}

if (!(view.config.rss && view.config.rss.baseUrl))
    lib.errx(1, `no rss.baseUrl prop in ${argv[1]}`)

process.stdout.write(ejs.render(`<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:content="http://purl.org/rss/1.0/modules/content/">

<channel>
<pubDate><%= updated %></pubDate>
<title><%= config.title %></title>
<description><%= config.desc %></description>
<link><%= config.rss.baseUrl %></link>
<language><%= config.rss.language %></language>
<itunes:image href="<%= config.rss.baseUrl + '/' + config.rss.itunes.image %>"/>
<itunes:explicit><%= config.rss.itunes.explicit %></itunes:explicit>
<% for (let cat of (config.rss.itunes.categories || [])) { %>
  <itunes:category text="<%= cat %>" />
<% } %>
<% if (config.rss.itunes.author) { %>
<itunes:author><%= config.rss.itunes.author %></itunes:author>
<% } %>

<% for (let post of posts) {
     let permalink = config.rss.baseUrl + '/' + post.file.replace(/\\.md$/, '.html') %>
<item>
  <title><%= post.subject %></title>
  <link><%= permalink %></link>
  <guid><%= permalink %></guid>
  <pubDate><%= new Date(post.mtime).toUTCString() %></pubDate>
  <% for (let author of post.authors) { %>
    <author>q@example.com (<%= author %>)</author>
  <% } %>
  <% for (let tag of post.tags) { %>
    <category><%= tag %></category>
  <% } %>
  <description><![CDATA[<%- body(post.file) %>]]></description>
  <% if (post.audio) { %>
    <enclosure type="<%- post.audio.type %>" length="<%- post.audio.length %>" url="<%= config.rss.baseUrl + '/' + postlink(post.audio.href, post.file) %>" />
  <% } %>
</item>
<% } %>

</channel>
</rss>`, view))
